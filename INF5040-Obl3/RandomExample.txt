# This script builds a randomly connected graph and prints in-degree 
# distribution, path length and clustering coefficient information.
# Basically it produces the data used as baseline.

SIZE 10000

CYCLE 1000
CYCLES 10

random.seed 1234567890
network.size SIZE
simulation.endtime CYCLE*CYCLES
simulation.logtime CYCLE


protocol.gossip IdleProtocol
{
}

init.wire WireKOut
{
	protocol gossip
	k 50
}

control.degree example.reports.InDegreeObserver
{
	protocol gossip

	step CYCLE
	starttime 9000
	endtime 10000
}

control.avgClustering no.uio.inf5040.obl3.AverageClusteringPrinter
{
	protocol gossip
	step CYCLE
	undir true
	outf output-clustering.txt
	nc 1000
}

control.avgLength no.uio.inf5040.obl3.AverageLengthPrinter
{
	protocol gossip
	step CYCLE
	undir true
	outf output-length.txt
	nl 10
}
